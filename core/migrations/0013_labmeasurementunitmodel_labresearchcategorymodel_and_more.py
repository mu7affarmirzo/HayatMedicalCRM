# Generated by Django 5.2 on 2025-04-28 18:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_alter_individualproceduresessionmodel_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LabMeasurementUnitModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('unit', models.CharField(blank=True, max_length=255, null=True)),
                ('conversion_factor', models.DecimalField(blank=True, decimal_places=6, max_digits=20, null=True)),
                ('si_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabResearchCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lab Research Category',
                'verbose_name_plural': 'Lab Research Categories',
            },
        ),
        migrations.CreateModel(
            name='LabResearchSubCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('display_order', models.IntegerField(default=0)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_categories', to='core.labresearchcategorymodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lab Research Sub-Category',
                'verbose_name_plural': 'Lab Research Sub-Categories',
            },
        ),
        migrations.CreateModel(
            name='LabResearchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=100, max_digits=10)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('alternative_code', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('attribute', models.CharField(blank=True, max_length=255, null=True)),
                ('deadline', models.IntegerField(blank=True, null=True)),
                ('deadline_cito', models.IntegerField(blank=True, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('minimum_volume', models.CharField(blank=True, max_length=50)),
                ('requires_approval', models.BooleanField(default=True)),
                ('approval_roles', models.CharField(blank=True, max_length=255)),
                ('preparation_instructions', models.TextField(blank=True)),
                ('clinical_information', models.TextField(blank=True)),
                ('loinc_code', models.CharField(blank=True, max_length=20)),
                ('interface_code', models.CharField(blank=True, max_length=50)),
                ('turnaround_time_hours', models.IntegerField(default=24)),
                ('days_performed', models.CharField(blank=True, max_length=100)),
                ('restrictions', models.TextField(blank=True)),
                ('requires_consent', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_research', to='core.labresearchcategorymodel')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_research', to='core.labresearchsubcategorymodel')),
            ],
            options={
                'verbose_name': 'Lab Research',
                'verbose_name_plural': 'Lab Research',
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('ordered_at', models.DateTimeField(auto_now_add=True)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent')], default='routine', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('collected', 'Sample Collected'), ('processing', 'Processing'), ('preliminary', 'Preliminary'), ('final', 'Final'), ('amended', 'Amended'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('collected_at', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('reported_at', models.DateTimeField(blank=True, null=True)),
                ('clinical_notes', models.TextField(blank=True)),
                ('accession_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('external_lab_reference', models.CharField(blank=True, max_length=100)),
                ('report_pdf', models.FileField(blank=True, null=True, upload_to='lab_reports/')),
                ('is_abnormal', models.BooleanField(default=False)),
                ('collected_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_labs', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('ordered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordered_labs', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patientmodel')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.labresearchmodel')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_labs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabTestGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabTestMethodModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabResearchTestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=255, null=True)),
                ('result_type', models.CharField(blank=True, choices=[('строковый', 'строковый'), ('числовой', 'числовой')], max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('ignore_status', models.BooleanField(default=False)),
                ('is_required_print_result', models.BooleanField(default=True)),
                ('instruments', models.CharField(blank=True, max_length=255, null=True)),
                ('keyboard', models.CharField(blank=True, max_length=255, null=True)),
                ('standard_result', models.CharField(blank=True, max_length=255, null=True)),
                ('default_result', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_code', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_code_for_repeat', models.CharField(blank=True, max_length=255, null=True)),
                ('is_micro_organism', models.BooleanField(default=False)),
                ('id_test_system', models.CharField(blank=True, max_length=255, null=True)),
                ('name_test_system', models.CharField(blank=True, max_length=255, null=True)),
                ('critical_low', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('critical_high', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('result_options', models.TextField(blank=True)),
                ('result_prefix', models.CharField(blank=True, max_length=10)),
                ('result_suffix', models.CharField(blank=True, max_length=10)),
                ('display_order', models.IntegerField(default=0)),
                ('calculation_formula', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('dependent_tests', models.ManyToManyField(blank=True, related_name='prerequisite_for', to='core.labresearchtestmodel')),
                ('measurement_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.labmeasurementunitmodel')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('research', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_research_tests', to='core.labresearchmodel')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.labtestgroupmodel')),
                ('method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.labtestmethodmodel')),
            ],
            options={
                'verbose_name': 'Lab Research Test',
                'verbose_name_plural': 'Lab Research Tests',
            },
        ),
        migrations.CreateModel(
            name='ReferenceRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('A', 'All')], default='A', max_length=10)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('lower_limit', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('upper_limit', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('text_normal', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_ranges', to='core.labresearchtestmodel')),
            ],
        ),
        migrations.CreateModel(
            name='LabTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('numeric_result', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('text_result', models.TextField(blank=True)),
                ('flag', models.CharField(blank=True, choices=[('N', 'Normal'), ('L', 'Low'), ('H', 'High'), ('LL', 'Critically Low'), ('HH', 'Critically High'), ('A', 'Abnormal')], max_length=2)),
                ('comments', models.TextField(blank=True)),
                ('is_abnormal', models.BooleanField(default=False)),
                ('delta_check', models.CharField(blank=True, max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('lab_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='core.labresult')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.labresearchtestmodel')),
                ('reference_range_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.referencerange')),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceRangeVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('reason_for_change', models.TextField(blank=True)),
                ('version_number', models.IntegerField()),
                ('is_current', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='core.referencerange')),
            ],
        ),
        migrations.CreateModel(
            name='SpecimenType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('container_type', models.CharField(blank=True, max_length=100)),
                ('collection_instructions', models.TextField(blank=True)),
                ('processing_instructions', models.TextField(blank=True)),
                ('storage_temperature', models.CharField(blank=True, max_length=50)),
                ('stability_period', models.CharField(blank=True, max_length=100)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='labresult',
            name='specimen_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.specimentype'),
        ),
        migrations.AddField(
            model_name='labresearchmodel',
            name='specimen_types',
            field=models.ManyToManyField(related_name='lab_tests', to='core.specimentype'),
        ),
        migrations.AddIndex(
            model_name='labmeasurementunitmodel',
            index=models.Index(fields=['unit'], name='core_labmea_unit_f28d75_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchcategorymodel',
            index=models.Index(fields=['name'], name='core_labres_name_60ff9d_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchcategorymodel',
            index=models.Index(fields=['display_order'], name='core_labres_display_df1453_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchsubcategorymodel',
            index=models.Index(fields=['name'], name='core_labres_name_f580e6_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchsubcategorymodel',
            index=models.Index(fields=['category'], name='core_labres_categor_d89583_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchsubcategorymodel',
            index=models.Index(fields=['display_order'], name='core_labres_display_f5a554_idx'),
        ),
        migrations.AddIndex(
            model_name='labtestgroupmodel',
            index=models.Index(fields=['name'], name='core_labtes_name_eeb73d_idx'),
        ),
        migrations.AddIndex(
            model_name='labtestmethodmodel',
            index=models.Index(fields=['name'], name='core_labtes_name_c6edf4_idx'),
        ),
        migrations.AddIndex(
            model_name='labtestmethodmodel',
            index=models.Index(fields=['is_active'], name='core_labtes_is_acti_4198b2_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchtestmodel',
            index=models.Index(fields=['name'], name='core_labres_name_6a5037_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchtestmodel',
            index=models.Index(fields=['research'], name='core_labres_researc_d057bc_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchtestmodel',
            index=models.Index(fields=['is_active'], name='core_labres_is_acti_2e4634_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchtestmodel',
            index=models.Index(fields=['result_type'], name='core_labres_result__0aecb3_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchtestmodel',
            index=models.Index(fields=['display_order'], name='core_labres_display_de7912_idx'),
        ),
        migrations.AddIndex(
            model_name='referencerange',
            index=models.Index(fields=['test', 'gender'], name='core_refere_test_id_d837df_idx'),
        ),
        migrations.AddIndex(
            model_name='referencerange',
            index=models.Index(fields=['is_active'], name='core_refere_is_acti_68cceb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referencerange',
            unique_together={('test', 'gender', 'min_age', 'max_age')},
        ),
        migrations.AddIndex(
            model_name='labtestresult',
            index=models.Index(fields=['lab_result'], name='core_labtes_lab_res_2d26ed_idx'),
        ),
        migrations.AddIndex(
            model_name='labtestresult',
            index=models.Index(fields=['test'], name='core_labtes_test_id_0a480b_idx'),
        ),
        migrations.AddIndex(
            model_name='labtestresult',
            index=models.Index(fields=['is_abnormal'], name='core_labtes_is_abno_98aad3_idx'),
        ),
        migrations.AddIndex(
            model_name='referencerangeversion',
            index=models.Index(fields=['range', 'is_current'], name='core_refere_range_i_754553_idx'),
        ),
        migrations.AddIndex(
            model_name='referencerangeversion',
            index=models.Index(fields=['effective_from', 'effective_to'], name='core_refere_effecti_9f268e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referencerangeversion',
            unique_together={('range', 'version_number')},
        ),
        migrations.AddIndex(
            model_name='specimentype',
            index=models.Index(fields=['name'], name='core_specim_name_424713_idx'),
        ),
        migrations.AddIndex(
            model_name='specimentype',
            index=models.Index(fields=['code'], name='core_specim_code_8a2d0c_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['patient'], name='core_labres_patient_44937f_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['illness_history'], name='core_labres_illness_1e3b94_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['research'], name='core_labres_researc_cf72aa_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['status'], name='core_labres_status_f69183_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['ordered_at'], name='core_labres_ordered_0e6739_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['accession_number'], name='core_labres_accessi_777663_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchmodel',
            index=models.Index(fields=['name'], name='core_labres_name_e2f76a_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchmodel',
            index=models.Index(fields=['is_active'], name='core_labres_is_acti_3799be_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchmodel',
            index=models.Index(fields=['category'], name='core_labres_categor_e0dd18_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchmodel',
            index=models.Index(fields=['sub_category'], name='core_labres_sub_cat_04cd18_idx'),
        ),
        migrations.AddIndex(
            model_name='labresearchmodel',
            index=models.Index(fields=['loinc_code'], name='core_labres_loinc_c_74fbc0_idx'),
        ),
    ]
