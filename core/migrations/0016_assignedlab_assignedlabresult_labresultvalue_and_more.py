# Generated by Django 5.2 on 2025-05-01 12:36

import django.db.models.deletion
import django_fsm
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0015_alter_individualproceduresessionmodel_unique_together'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignedLab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', django_fsm.FSMField(choices=[('recommended', 'recommended'), ('assigned', 'assigned'), ('cancelled', 'cancelled'), ('stopped', 'stopped'), ('dispatched', 'dispatched'), ('results', 'results')], default='assigned', max_length=50, protected=True)),
                ('instructions', models.TextField(blank=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('collected_at', models.DateTimeField(blank=True, null=True)),
                ('dispatched_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_labs', to='core.illnesshistory')),
                ('lab_test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_labs', to='core.labresearchmodel')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('recommended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labs_recommended', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='labs_requested', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assigned Lab',
                'verbose_name_plural': 'Assigned Labs',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignedLabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True)),
                ('attached_file', models.FileField(blank=True, null=True, upload_to='lab_results/%Y/%m/%d/')),
                ('file_format', models.CharField(blank=True, max_length=10)),
                ('assigned_lab', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='core.assignedlab')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assigned Lab Result',
                'verbose_name_plural': 'Assigned Lab Results',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='LabResultValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=100)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('reference_range', models.CharField(blank=True, max_length=100)),
                ('flags', models.CharField(blank=True, help_text='E.g. High, Low, Critical', max_length=50)),
                ('assigned_lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_values', to='core.assignedlab')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lab Result Value',
                'verbose_name_plural': 'Lab Result Values',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='assignedlab',
            index=models.Index(fields=['state'], name='core_assign_state_13efd7_idx'),
        ),
        migrations.AddIndex(
            model_name='assignedlab',
            index=models.Index(fields=['lab_test'], name='core_assign_lab_tes_eea3cc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignedlab',
            unique_together={('illness_history', 'lab_test', 'requested_at')},
        ),
    ]
