# Generated by Django 5.2 on 2025-04-24 11:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0008_permissionsmodel_rename_role_rolesmodel_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='consultingwithcardiologistmodel',
            name='state',
            field=models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250),
        ),
        migrations.CreateModel(
            name='AppointmentWithOnDutyDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250)),
                ('complaints', models.TextField(blank=True, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('arterial_high_low', models.CharField(blank=True, max_length=255, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.CharField(blank=True, max_length=255, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_duty_doctor_appointment', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentWithOnDutyDoctorOnArrivalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250)),
                ('complaints', models.TextField(blank=True, null=True)),
                ('arv_number', models.CharField(blank=True, max_length=255, null=True)),
                ('ayes_shells', models.CharField(blank=True, max_length=255, null=True)),
                ('from_to_sanatorium', models.CharField(blank=True, max_length=255, null=True)),
                ('road_crossed', models.CharField(blank=True, max_length=255, null=True)),
                ('abroad_for_last_years', models.CharField(blank=True, max_length=255, null=True)),
                ('virus_hepatitis', models.CharField(blank=True, max_length=255, null=True)),
                ('tuberculosis', models.CharField(blank=True, max_length=255, null=True)),
                ('malarias', models.CharField(blank=True, max_length=255, null=True)),
                ('venerian_illness', models.CharField(blank=True, max_length=255, null=True)),
                ('dizanteri', models.CharField(blank=True, max_length=255, null=True)),
                ('helminthic_infestations', models.CharField(blank=True, max_length=255, null=True)),
                ('had_contact_with_inf_people', models.CharField(blank=True, max_length=255, null=True)),
                ('had_stul_for', models.BooleanField(default=False)),
                ('allergy', models.CharField(blank=True, max_length=255, null=True)),
                ('meteolabilisis', models.CharField(blank=True, max_length=255, null=True)),
                ('non_carrying_prods', models.CharField(blank=True, max_length=255, null=True)),
                ('stull_issues', models.CharField(blank=True, max_length=255, null=True)),
                ('has_always_pills', models.CharField(blank=True, max_length=255, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('temperature', models.CharField(blank=True, max_length=255, null=True)),
                ('arterial_high_low', models.CharField(blank=True, max_length=255, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.IntegerField(null=True)),
                ('pulse', models.CharField(blank=True, choices=[('ритмичный', 'ритмичный'), ('аритмичный', 'аритмичный')], max_length=255, null=True)),
                ('diet', models.CharField(blank=True, max_length=255, null=True)),
                ('regime', models.CharField(blank=True, choices=[('Щадящий', 'Щадящий'), ('Постельный', 'Постельный'), ('Тонизирующий', 'Тонизирующий'), ('Тренирующий', 'Тренирующий')], max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='on_duty_doctor_on_arr_appointment', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsultingWithNeurologistModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250)),
                ('is_familiar_with_anamnesis', models.BooleanField(default=False)),
                ('complaint', models.TextField(blank=True, null=True)),
                ('anamnesis', models.TextField(blank=True, null=True)),
                ('palpebral_fissures', models.CharField(blank=True, max_length=250, null=True)),
                ('pupils', models.CharField(blank=True, max_length=250, null=True)),
                ('reaction_on_pupils', models.CharField(blank=True, max_length=250, null=True)),
                ('aye_frame_movement', models.CharField(blank=True, max_length=250, null=True)),
                ('nystagmus', models.CharField(blank=True, max_length=250, null=True)),
                ('face', models.CharField(blank=True, max_length=250, null=True)),
                ('tongue', models.CharField(blank=True, max_length=250, null=True)),
                ('soft_sk', models.CharField(blank=True, max_length=250, null=True)),
                ('phonation_swallowing', models.CharField(blank=True, max_length=250, null=True)),
                ('reflexes', models.CharField(blank=True, max_length=250, null=True)),
                ('muscle_strength', models.CharField(blank=True, max_length=250, null=True)),
                ('muscle_tones', models.CharField(blank=True, max_length=250, null=True)),
                ('deep_reflexes_hand', models.CharField(blank=True, max_length=250, null=True)),
                ('deep_reflexes_foot', models.CharField(blank=True, max_length=250, null=True)),
                ('stylo_radial', models.CharField(blank=True, max_length=250, null=True)),
                ('biceps', models.CharField(blank=True, max_length=250, null=True, verbose_name='с двуглавой мышцы плеча')),
                ('triceps', models.CharField(blank=True, max_length=250, null=True, verbose_name='с трехглавой мышцы плеча')),
                ('knees', models.CharField(blank=True, max_length=250, null=True, verbose_name='коленные')),
                ('achilles', models.CharField(blank=True, max_length=250, null=True, verbose_name='ахилловы')),
                ('abdominal', models.CharField(blank=True, max_length=250, null=True, verbose_name='брюшные')),
                ('pathological_reflexes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Патологические рефлексы')),
                ('romberg_position', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='Положение в позе Ромберга')),
                ('complicated_position', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='В усложненной позе Ромберга')),
                ('finger_test', models.CharField(blank=True, default='выполняет точно', max_length=250, null=True, verbose_name='Пальценосовая проба')),
                ('heel_knee_test', models.CharField(blank=True, default='выполняет точно', max_length=250, null=True, verbose_name='Пяточно-коленная проба')),
                ('gait', models.CharField(blank=True, default='устойчив', max_length=250, null=True, verbose_name='Походка')),
                ('sensitivity', models.CharField(default='не нарушена', max_length=255)),
                ('cognitive_test', models.CharField(blank=True, max_length=255, null=True)),
                ('emotional_volitional_sphere', models.CharField(blank=True, max_length=255, null=True)),
                ('insomnia', models.CharField(blank=True, default='эпизодическая', max_length=255, null=True)),
                ('movements_in_the_cervical_spine', models.CharField(blank=True, max_length=255, null=True)),
                ('movements_in_the_spinal_spine', models.CharField(blank=True, max_length=255, null=True, verbose_name='Движения в поясничном отделе позвоночника')),
                ('spinous_processes', models.CharField(blank=True, max_length=255, null=True, verbose_name='Болезненность при пальпации остистых отростков')),
                ('paravertebral_points', models.CharField(blank=True, max_length=255, null=True, verbose_name='Болезненность паравертебральных точек')),
                ('lasegues_symptom', models.CharField(blank=True, max_length=255, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='neurologist_consulting', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EkgAppointmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250)),
                ('rhythm', models.CharField(blank=True, max_length=250, null=True)),
                ('heart_s_count', models.IntegerField(blank=True, null=True)),
                ('r_r', models.FloatField(blank=True, null=True)),
                ('p_q', models.FloatField(blank=True, null=True)),
                ('qrs', models.FloatField(blank=True, null=True)),
                ('v1', models.FloatField(blank=True, null=True)),
                ('v6', models.FloatField(blank=True, null=True)),
                ('q_t', models.FloatField(blank=True, null=True)),
                ('la', models.FloatField(blank=True, null=True)),
                ('prong_p', models.CharField(blank=True, max_length=250, null=True)),
                ('complex_qrs', models.CharField(blank=True, max_length=250, null=True)),
                ('prong_t', models.CharField(blank=True, max_length=250, null=True)),
                ('segment_st', models.CharField(blank=True, max_length=250, null=True)),
                ('electric_axis', models.CharField(blank=True, choices=[('N', 'N'), ('горизонтальная', 'горизонтальная'), ('вертикальная', 'вертикальная'), ('отклонена влево', 'отклонена влево'), ('отклонена вправо', 'отклонена вправо')], max_length=250, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('for_sanatorium_treatment', models.CharField(blank=True, choices=[('Показан', 'Показан'), ('Не показан', 'Не показан'), ('Противопоказан', 'Противопоказан')], max_length=250, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ekg_app', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RepeatedAppointmentWithDoctorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('state', models.CharField(choices=[('активное', 'активное'), ('пассивное', 'пассивное'), ('вынужденное', 'вынужденное')], default='Приём завершён', max_length=250)),
                ('complaint', models.TextField(blank=True, null=True)),
                ('objective_data', models.TextField(blank=True, null=True)),
                ('arterial_high_low', models.CharField(blank=True, max_length=255, null=True)),
                ('arterial_high', models.IntegerField(null=True)),
                ('arterial_low', models.IntegerField(null=True)),
                ('imt', models.CharField(blank=True, max_length=255, null=True)),
                ('cito', models.BooleanField(default=False)),
                ('summary', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('diagnosis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.diagnosistemplate')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('illness_history', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='repeated_appointment', to='core.illnesshistory')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
